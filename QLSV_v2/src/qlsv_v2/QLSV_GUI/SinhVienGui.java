/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package qlsv_v2.QLSV_GUI;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author nitro
 */
public class SinhVienGui extends javax.swing.JFrame {
    private DefaultTableModel modelSinhVien;
    
    private JTable tblSinhVien;
    private Object stmt;
    private Object rs;
    /**
     * Creates new form SinhVienGui
     */
    public SinhVienGui() {
        DefaultTableModel modelSinhVien = new DefaultTableModel();
        initComponents();
        Connect connect = new Connect();
        connect.connectDatabase();
        setLocationRelativeTo(null);
        
        showsv();
        loadDangKi();
        loadMonHoc();
        loadKetQua();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        txtDienThoai = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtGioiTinh = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        sinhvien = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtMaMH = new javax.swing.JTextField();
        txtSoTinChi = new javax.swing.JTextField();
        txtTenMH = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbMonHoc = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        MaDK = new javax.swing.JTextField();
        NgayDK = new javax.swing.JTextField();
        MaSV = new javax.swing.JTextField();
        MaMH = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        DangKi = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtMaDK = new javax.swing.JTextField();
        txtDiem = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        ketquahoctap = new javax.swing.JTable();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Mã Sinh Viên:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Ngày Sinh(dd/mm/yyyy):");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Địa Chỉ:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Giới Tính:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Số Điện THoại:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Họ Tên:");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/student.png"))); // NOI18N
        jButton1.setText("Thêm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        sinhvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sinh Viên", "Họ Tên", "Ngày Sinh", "Giới Tính", "Địa Chỉ", "Số Điện Thoại"
            }
        ));
        jScrollPane1.setViewportView(sinhvien);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/delete.png"))); // NOI18N
        jButton4.setText("Xóa");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/pen.png"))); // NOI18N
        jButton6.setText("Sửa");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\nitro\\Desktop\\QLSV_New\\img\\refresh-button.png")); // NOI18N
        jButton2.setText("Làm Mới");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 296, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(txtGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jButton2))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Thêm Sinh Viên", jPanel1);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Mã Môn Học:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Tên Môn Học:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Số Tín Chỉ:");

        txtMaMH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaMHActionPerformed(evt);
            }
        });

        txtTenMH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenMHActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/refresh-button.png"))); // NOI18N
        jButton3.setText("Làm Mới");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/student.png"))); // NOI18N
        jButton5.setText("Thêm");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/pen.png"))); // NOI18N
        jButton7.setText("Sửa");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/delete.png"))); // NOI18N
        jButton8.setText("Xóa");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        tbMonHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Môn Học", "Tên Môn Học", "Số Tín Chỉ"
            }
        ));
        jScrollPane2.setViewportView(tbMonHoc);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addGap(26, 26, 26)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton8))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(186, 186, 186)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaMH, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSoTinChi, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenMH, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaMH, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenMH, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSoTinChi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton5)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addGap(18, 18, 18))
        );

        jTabbedPane1.addTab("Môn Học", jPanel2);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel11.setText("Mã Sinh Viên:");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel12.setText("Mã Đăng Kí:");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel13.setText("Mã Môn Học:");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel14.setText("Ngày Đăng Kí:");

        DangKi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Đăng Kí", "Mã Sinh Viên", "Mã Môn Học", "Ngày Đăng Kí"
            }
        ));
        jScrollPane3.setViewportView(DangKi);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/refresh-button.png"))); // NOI18N
        jButton9.setText("Làm Mới");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/student.png"))); // NOI18N
        jButton10.setText("Thêm");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/pen.png"))); // NOI18N
        jButton11.setText("Sửa");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/delete.png"))); // NOI18N
        jButton12.setText("Xóa");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(175, 175, 175)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MaDK, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                            .addComponent(MaSV)
                            .addComponent(MaMH)
                            .addComponent(NgayDK)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jButton9)
                        .addGap(18, 18, 18)
                        .addComponent(jButton10)
                        .addGap(18, 18, 18)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton12)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(MaDK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(MaMH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28))
                            .addComponent(NgayDK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel13)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel14)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton10)
                        .addComponent(jButton12)
                        .addComponent(jButton9))
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Đăng Kí Thi", jPanel3);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("Mã Đăng kí:");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setText("Điểm:");

        txtMaDK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaDKActionPerformed(evt);
            }
        });

        txtDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiemActionPerformed(evt);
            }
        });

        ketquahoctap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Đăng kí", "Điểm "
            }
        ));
        jScrollPane4.setViewportView(ketquahoctap);

        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/delete.png"))); // NOI18N
        jButton17.setText("Xóa");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/pen.png"))); // NOI18N
        jButton18.setText("Sửa");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/student.png"))); // NOI18N
        jButton19.setText("Thêm");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlsv_v2/QLSV_GUI/refresh-button.png"))); // NOI18N
        jButton20.setText("Làm Mới");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(127, 127, 127)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaDK, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jButton20)
                                .addGap(18, 18, 18)
                                .addComponent(jButton19)
                                .addGap(18, 18, 18)
                                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton17)))
                        .addGap(0, 262, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaDK, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton19)
                        .addComponent(jButton17)
                        .addComponent(jButton20))
                    .addComponent(jButton18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Kết Quả Học Tập", jPanel4);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setText("Chương Trình Quản Lý Sinh Viên");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void showsv() {
        Connect conn = new Connect();
        conn.connectDatabase();
        Connection connection = conn.getConnection();

    if (connection == null) {
        System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
        return;
    }

    try {
        // Câu lệnh SQL để lấy dữ liệu
        String sql = "SELECT * FROM tblSinhVien";

        // Chuẩn bị và thực thi câu lệnh SQL
        PreparedStatement ps = connection.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();

        // Lấy model của bảng
        DefaultTableModel model = (DefaultTableModel) sinhvien.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ trong bảng

        // Duyệt qua kết quả truy vấn và thêm từng dòng vào bảng
        while (rs.next()) {
            Object[] row = {
                rs.getString("Masv"),
                rs.getString("HoTen"),
                rs.getDate("NgaySinh"),
                rs.getString("GioiTinh"),
                rs.getString("DiaChi"),
                rs.getString("DienThoai")
            };
            model.addRow(row);
        }

        // Đóng tài nguyên
        rs.close();
        ps.close();
    } catch (SQLException e) {
        System.out.println("Vui Lòng Kiểm tra Lại masv  " + e.getMessage());
        e.printStackTrace();
    
    }

    
}

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         
        if (txtMaSV.getText().isEmpty() || txtHoTen.getText().isEmpty() || txtNgaySinh.getText().isEmpty() ||
        txtGioiTinh.getText().isEmpty() || txtDiaChi.getText().isEmpty() || txtDienThoai.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin!");
        return;
    }

    Connect conn = new Connect();
    conn.connectDatabase();
    Connection connection = conn.getConnection();

    if (connection == null) {
        System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
        return;
    }

    try {
        String sql = "INSERT INTO tblSinhVien (MaSV, HoTen, NgaySinh, GioiTinh, DiaChi, DienThoai) VALUES (?, ?, ?, ?, ?, ?)";
        
        try (PreparedStatement pstmt = connection.prepareStatement(sql)) {
            String ngaySinhStr = txtNgaySinh.getText();

            // Sử dụng định dạng đúng (yyyy/MM/dd)
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date date = null;
            try {
                date = sdf.parse(ngaySinhStr); 
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(this, "Ngày sinh không hợp lệ. Vui lòng nhập đúng định dạng (yyyy/MM/dd).");
                return;
            }
            java.sql.Date sqlDate = new java.sql.Date(date.getTime());

            // Gán các giá trị vào PreparedStatement
            pstmt.setString(1, txtMaSV.getText());
            pstmt.setString(2, txtHoTen.getText());
            pstmt.setDate(3, sqlDate);
            pstmt.setString(4, txtGioiTinh.getText());
            pstmt.setString(5, txtDiaChi.getText());
            pstmt.setString(6, txtDienThoai.getText());

            // Thực thi câu lệnh INSERT
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Thêm sinh viên thành công!");
            showsv(); // Cập nhật bảng dữ liệu

        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Vui Lòng Kiểm tra Lại MaSV");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Đã có lỗi xảy ra: " + e.getMessage());
    }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        Connect conn = new Connect();
        conn.connectDatabase();
        Connection connection = conn.getConnection();

        if (connection == null) {
            System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
            return;
  }

  try {
      String sql = "UPDATE tblSinhVien SET HoTen = ?, NgaySinh = ?, GioiTinh = ?, DiaChi = ?, DienThoai = ? WHERE MaSV = ?";
      try (PreparedStatement pstmt = connection.prepareStatement(sql)) {
          // Chuyển đổi Ngày Sinh từ String sang java.sql.Date
          String ngaySinhStr = txtNgaySinh.getText();
          SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy"); // Định dạng ngày nhập vào
          java.util.Date date = sdf.parse(ngaySinhStr);
          java.sql.Date sqlDate = new java.sql.Date(date.getTime());

          pstmt.setString(1, txtHoTen.getText());
          pstmt.setDate(2, sqlDate); // Sử dụng java.sql.Date
          pstmt.setString(3, txtGioiTinh.getText());
          pstmt.setString(4, txtDiaChi.getText());
          pstmt.setString(5, txtDienThoai.getText());
          pstmt.setString(6, txtMaSV.getText());

          pstmt.executeUpdate();
          JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
          showsv();
      }
  } catch (SQLException ex) {
      ex.printStackTrace();
      JOptionPane.showMessageDialog(this, "Vui Lòng Nhập Đúng Mã Sinh Viên để Cập Nhật Thông Tin!!!!");
  } catch (Exception e) {
      JOptionPane.showMessageDialog(this, "Ngày sinh không hợp lệ. Vui lòng nhập đúng định dạng (dd/MM/yyyy).");
  }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Connect conn = new Connect();
        conn.connectDatabase();
        Connection connection = conn.getConnection();

        if (connection == null) {
            System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
            return;}
            try {
                String sql = "DELETE FROM tblSinhVien WHERE MaSV = ?";
                try (PreparedStatement pstmt = connection.prepareStatement(sql)) {
                pstmt.setString(1, txtMaSV.getText());
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Xóa sinh viên thành công!");
                showsv();
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Vui Lòng Kiểm Tra Lại Mã Sinh Viên \nCần Xóa trong DS SV");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        showsv();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
    Connect conn = new Connect();
        conn.connectDatabase();
        Connection connection = conn.getConnection();

        if (connection == null) {
            System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
            return;}
            try {
            String sql = "DELETE FROM tblMonHoc WHERE MaMH=?";
            try(PreparedStatement pstmt = connection.prepareStatement(sql)){
            pstmt.setString(1, txtMaMH.getText());
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Xóa môn học thành công!");
            loadMonHoc();
        }} catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Vui Lòng Nhập Đúng Mã Môn Học Cần xóa");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void txtMaMHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaMHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaMHActionPerformed

    private void txtTenMHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenMHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenMHActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Connect conn = new Connect();
        conn.connectDatabase();
        Connection connection = conn.getConnection();

        if (connection == null) {
            System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
            return;}
        
        try {
            String sql = "INSERT INTO tblMonHoc VALUES (?, ?, ?)";
            try (PreparedStatement pstmt = connection.prepareStatement(sql)) {
            pstmt.setString(1, txtMaMH.getText());
            pstmt.setString(2, txtTenMH.getText());
            pstmt.setInt(3, Integer.parseInt(txtSoTinChi.getText()));
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Thêm môn học thành công!");
            loadMonHoc();
}
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Thêm môn học thất bại!");
        }

    }//GEN-LAST:event_jButton5ActionPerformed
    private void loadMonHoc(){
        Connect conn = new Connect();
            conn.connectDatabase();
            Connection connection = conn.getConnection();

        if (connection == null) {
            System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
            return;
        }

        try {
            // Câu lệnh SQL để lấy dữ liệu
            String sql = "SELECT * FROM tblMonHoc";
            System.out.println("Bảng Môn Học Kết Nối thành công!!!");

            // Chuẩn bị và thực thi câu lệnh SQL
            PreparedStatement ps = connection.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            // Lấy model của bảng
            DefaultTableModel model = (DefaultTableModel) tbMonHoc.getModel();
            model.setRowCount(0); 
            while (rs.next()) {
                Object[] row = {
                            rs.getString("MaMH"),
                            rs.getString("TenMonHoc"),
                            rs.getInt("SoTinChi")
               };
                model.addRow(row);
            }

            // Đóng tài nguyên
            rs.close();
            ps.close();
        } catch (SQLException e) {
            System.out.println("Lỗi khi truy vấn dữ liệu: " + e.getMessage());
            e.printStackTrace();
    }
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        loadMonHoc();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
            Connect conn = new Connect();
            conn.connectDatabase();
            Connection connection = conn.getConnection();

        if (connection == null) {
            System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
            return;
        }
    try {
            String sql = "UPDATE tblMonHoc SET TenMonHoc=?, SoTinChi=? WHERE MaMH=?";
            try(PreparedStatement pstmt = connection.prepareStatement(sql)){
            pstmt.setString(1, txtTenMH.getText());
            pstmt.setInt(2, Integer.parseInt(txtSoTinChi.getText()));
            pstmt.setString(3, txtMaMH.getText());
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Cập nhật môn học thành công!");
            loadMonHoc();
        }} catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Vui Lòng Nhập Đúng \nMã Môn Học Để Sửa chữa");
        }
    
    }//GEN-LAST:event_jButton7ActionPerformed
    private void loadDangKi(){
        Connect conn = new Connect();
            conn.connectDatabase();
            Connection connection = conn.getConnection();

        if (connection == null) {
            System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
            return;
        }

        try {
            // Câu lệnh SQL để lấy dữ liệu
            String sql = "SELECT * FROM tblDangKy";
            System.out.println("Bảng Đăng Kí Kết Nối thành công!!!");

            // Chuẩn bị và thực thi câu lệnh SQL
            PreparedStatement ps = connection.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            // Lấy model của bảng
            DefaultTableModel model = (DefaultTableModel) DangKi.getModel();
            model.setRowCount(0); 
            while (rs.next()) {
                Object[] row = {
                        rs.getString("MaDK"),
                        rs.getString("MaSV"),
                        rs.getString("MaMH"),
                        rs.getDate("NgayDangKy")
               };
                model.addRow(row);
            }

            // Đóng tài nguyên
            rs.close();
            ps.close();
        } catch (SQLException e) {
            System.out.println("Lỗi khi truy vấn dữ liệu: " + e.getMessage());
            e.printStackTrace();




    }
    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        loadDangKi();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        Connect conn = new Connect();
            conn.connectDatabase();
            Connection connection = conn.getConnection();

        if (connection == null) {
            System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
            return;
        }

        try {
        
            String sql = "INSERT INTO tblDangKy VALUES (?, ?, ?, ?)";
            try(PreparedStatement pstmt = connection.prepareStatement(sql)){
            String ngaydkStr = NgayDK.getText();

            // Sử dụng định dạng đúng (yyyy/MM/dd)
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date date = null;
            try {
                date = sdf.parse(ngaydkStr); 
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(this, "Ngày sinh không hợp lệ. Vui lòng nhập đúng định dạng (yyyy/MM/dd).");
                return;
            }
            java.sql.Date sqlDate = new java.sql.Date(date.getTime());   
            pstmt.setString(1, MaDK.getText());
            pstmt.setString(2, MaSV.getText());
            pstmt.setString(3, MaMH.getText());
            pstmt.setDate(4, sqlDate);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Thêm đăng ký thành công!");
            loadDangKi();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Thêm đăng ký thất bại!");
        }
    
                // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        Connect conn = new Connect();
        conn.connectDatabase();
        Connection connection = conn.getConnection();
        if (connection == null) {
            System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
            return;
        }
        try {
            String sql = "UPDATE tblDangKy SET MaSV=?, MaMH=?, NgayDangKy=? WHERE MaDK=?";
            try (PreparedStatement pstmt = connection.prepareStatement(sql)) {
                String ngaydkStr = NgayDK.getText(); // Lấy giá trị từ JTextField
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy"); // Định dạng nhập vào từ người dùng
                java.util.Date date = sdf.parse(ngaydkStr); // Chuyển chuỗi thành java.util.Date
                java.sql.Date sqlDate = new java.sql.Date(date.getTime()); // Chuyển thành java.sql.Date

                pstmt.setString(1, MaSV.getText());
                pstmt.setString(2, MaMH.getText());
                pstmt.setDate(3, sqlDate); // Gán giá trị ngày đã chuyển đổi
                pstmt.setString(4, MaDK.getText());
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Cập nhật đăng ký thành công!");
                loadDangKi();
            } catch (ParseException ex) {
                Logger.getLogger(SinhVienGui.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Ngày đăng ký không hợp lệ. Vui lòng nhập đúng định dạng (dd/MM/yyyy).");
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "       [warring]-Vui Lòng kiểm tra lại \n Mã Sinh Viên không có trong Danh Sách SV ");
        }
               // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        Connect conn = new Connect();
            conn.connectDatabase();
            Connection connection = conn.getConnection();

        if (connection == null) {
            System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
            return;
        }
        try {
            String sql = "DELETE FROM tblDangKy WHERE MaDK=?";
            try(PreparedStatement pstmt = connection.prepareStatement(sql)){
            pstmt.setString(1, MaDK.getText());
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Xóa đăng ký thành công!");
            loadDangKi();
            }} catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Xóa đăng ký thất bại !\n Vui Lòng Kiểm tra lại mã Đăng kí!");
        }
        
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        Connect conn = new Connect();
            conn.connectDatabase();
            Connection connection = conn.getConnection();

        if (connection == null) {
            System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
            return;
        }
        try {
            String sql = "DELETE FROM tblKetQuaHocTap WHERE MaDK=?";
            try(PreparedStatement pstmt = connection.prepareStatement(sql)){
            pstmt.setString(1, txtMaDK.getText());
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Xóa kết quả thành công!");
            loadKetQua();
        }} catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Xóa kết quả thất bại!\n Vui Lòng Kiểm tra lại mã Đăng kí!");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
            Connect conn = new Connect();
            conn.connectDatabase();
            Connection connection = conn.getConnection();

        if (connection == null) {
            System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
            return;
        }
        try {
            String sql = "UPDATE tblKetQuaHocTap SET Diem=? WHERE MaDK=?";
            try(PreparedStatement pstmt = connection.prepareStatement(sql)){
            pstmt.setDouble(1, Double.parseDouble(txtDiem.getText()));
            pstmt.setString(2, txtMaDK.getText());
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Cập nhật kết quả thành công!");
            }loadKetQua();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Cập nhật kết quả thất bại!");
        }
    
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        Connect conn = new Connect();
            conn.connectDatabase();
            Connection connection = conn.getConnection();

        if (connection == null) {
            System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
            return;
        }
        try {
            // Kiểm tra xem MaDK có tồn tại trong bảng hay không
            String checkSQL = "SELECT COUNT(*) FROM tblKetQuaHocTap WHERE MaDK = ?";
            try(PreparedStatement checkStmt = connection.prepareStatement(checkSQL)){
            checkStmt.setString(1, txtMaDK.getText());
            ResultSet rs = checkStmt.executeQuery();
            if (rs.next() && rs.getInt(1) > 0) {
                // Nếu MaDK đã tồn tại, hiển thị thông báo lỗi
                JOptionPane.showMessageDialog(this, "Mã DK này đã tồn tại. Vui lòng chọn mã DK khác.");
            } else {
                // Nếu MaDK chưa tồn tại, thực hiện thêm mới
                String sql = "INSERT INTO tblKetQuaHocTap (MaDK, Diem) VALUES (?, ?)";
                try(PreparedStatement pstmt = connection.prepareStatement(sql)){
                pstmt.setString(1, txtMaDK.getText());
                pstmt.setDouble(2, Double.parseDouble(txtDiem.getText()));  // Chuyển đổi điểm thành Double
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Thêm kết quả thành công!");
                loadKetQua();
            }}}
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Thêm kết quả thất bại!");
        }
    
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        loadKetQua();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton20ActionPerformed

    private void txtMaDKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaDKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaDKActionPerformed

    private void txtDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiemActionPerformed
    private void loadKetQua() {
        Connect conn = new Connect();
            conn.connectDatabase();
            Connection connection = conn.getConnection();

        if (connection == null) {
            System.out.println("Kết nối không thành công, không thể truy vấn dữ liệu!");
            return;
        }

        try {
            // Câu lệnh SQL để lấy dữ liệu
            String sql = "SELECT * FROM tblKetQuaHocTap";
            System.out.println("Bảng Kết Quả Học Tập !!!");

            // Chuẩn bị và thực thi câu lệnh SQL
            PreparedStatement ps = connection.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            // Lấy model của bảng
            DefaultTableModel model = (DefaultTableModel) ketquahoctap.getModel();
            model.setRowCount(0); 
            while (rs.next()) {
                Object[] row = {
                        rs.getString("MaDK"),
                        rs.getDouble("Diem")
               };
                model.addRow(row);
            }

            // Đóng tài nguyên
            rs.close();
            ps.close();
        } catch (SQLException e) {
            System.out.println("Lỗi khi truy vấn dữ liệu: " + e.getMessage());
            e.printStackTrace();




    }
    }        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SinhVienGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SinhVienGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SinhVienGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SinhVienGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SinhVienGui().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DangKi;
    private javax.swing.JTextField MaDK;
    private javax.swing.JTextField MaMH;
    private javax.swing.JTextField MaSV;
    private javax.swing.JTextField NgayDK;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable ketquahoctap;
    private javax.swing.JTable sinhvien;
    private javax.swing.JTable tbMonHoc;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtDiem;
    private javax.swing.JTextField txtDienThoai;
    private javax.swing.JTextField txtGioiTinh;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaDK;
    private javax.swing.JTextField txtMaMH;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSoTinChi;
    private javax.swing.JTextField txtTenMH;
    // End of variables declaration//GEN-END:variables
}
